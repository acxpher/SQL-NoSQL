/*TASK 1A*/
commit
select * from user_constraints;

/*TASK 1B*/

ALTER TABLE ORGANISATIONS 
ADD CONSTRAINT PK_ORGANISATION_ID PRIMARY KEY (ORGANISATION_ID);

ALTER TABLE SPOTTERS
ADD CONSTRAINT PK_SPOTTER_ID PRIMARY KEY (SPOTTER_ID);

ALTER TABLE SPOTTERS 
ADD CONSTRAINT FK_ORG_ID_TO_ORG_ID
FOREIGN KEY(ORGANISATION_ID) REFERENCES ORGANISATIONS (ORGANISATION_ID);

ALTER TABLE BIRDS
ADD CONSTRAINT PK_BIRD_ID PIRMARY KEY (BIRD_ID);

ALTER TABLE SIGHTINGS
ADD CONSTRAINT PK_SIGHTING_ID PRIMARY KEY (SIGHTING_ID);

ALTER TABLE SIGHTINGS 
ADD CONSTRAINT FK_SPOTTER_ID_TO_SPOTTER_ID
FOREIGN KEY(SPOTTER_ID) REFERENCES SPOTTERS (SPOTTER_ID);

ALTER TABLE SIGHTINGS
ADD CONSTRAINT FK_BIRD_ID_TO_BIRD_ID
FOREIGN KEY(BIRD_ID) REFERENCES BIRDS(BIRD_ID);

ALTER TABLE ORGANISATIONS
MODIFY ORGANISATION_NAME CONSTRAINT NN_ORGANISATION_NAME NOT NULL;

ALTER TABLE SPOTTERS
MODIFY SPOTTER_NAME CONSTRAINT NN_SPOTTER_NAME NOT NULL;

ALTER TABLE BIRDS
MODIFY BIRD_NAME CONSTRAINT NN_BIRD_NAME NOT NULL;

ALTER TABLE SIGHTINGS
ADD CONSTRAINT CK_SIGHTING_DATE CHECK(SIGHTING_DATE<'01-JAN-2016');

/*TASK 2A*/

CREATE SEQUENCE "SEQ_SEQUENCE" MINVALUE 1000 MAXVALUE 999999999999
INCREMENT BY 1 START WITH 300000;

CREATE OR REPLACE TRIGGER "TR_SIGHTING_ID"
  BEFORE INSERT ON "SIGHTINGS"
  FOR EACH ROW
 BEGIN
   SELECT "SEQ_SEQUENCE".NEXTVAL INTO :NEW.SIGHTING_ID FROM DUAL;
END;
/
/*TASK 2B*/

CREATE OR REPLACE TRIGGER "TR_SIGHTING_DESC"
  BEFORE INSERT ON "SIGHTINGS"
  FOR EACH ROW
  DECLARE 
  X VARCHAR2(100);
  Y VARCHAR2(100);
  NAME VARCHAR2(100);
BEGIN 
  IF(:NEW.LONGITUDE>151.25) THEN Y:='eastern';ELSE Y:='western'; 
  END IF;
  IF(:NEW.LATITUDE>-28.1) THEN X:='northern';ELSE X:='southern';
  END IF;
 SELECT BIRD_NAME INTO NAME FROM BIRDS WHERE BIRD_ID=:NEW.BIRD_ID;
 :NEW.DESCRIPTION:='A bird of the species '||NAME||' was spotted in the '||X||'-'||Y||' part of the observation area';
 END;

/*TASK 2C*/
SELECT * FROM SIGHTINGS WHERE SIGHTING_DATE='09-MAR-2016';

/*TASK 3A */

CREATE OR REPLACE VIEW V_ORGANISATION_BIRD_COUNT
AS SELECT organisation_name, count(*) as bird_count
FROM organisations, sightings , spotters 
WHERE Organisations.ORGANISATION_ID=SPotters.ORGANISATION_ID
AND Spotters.SPOTTER_ID=Sightings.SPOTTER_ID
GROUP BY Organisations.organisation_name;

/*TASL 3B*/

CREATE MATERIALIZED VIEW MV_ORGANISATION_BIRD_COUNT
BUILD IMMEDIATE
AS SELECT organisation_name, count(*) as bird_count
FROM organisations, sightings , spotters 
WHERE Organisations.ORGANISATION_ID=SPotters.ORGANISATION_ID
AND Spotters.SPOTTER_ID=Sightings.SPOTTER_ID
GROUP BY Organisations.organisation_name;

/*TASK 3C
Materialized view is much faster as it is physically stored
*/

/*TASK 4A*/
SELECT sighting_id,sqrt(power(longitude-151,2)+power(latitude+28,2)) AS DISTANCE 
FROM sightings 
WHERE sqrt(power(longitude-151,2)+power(latitude+28,2)) = (select MAX(sqrt(power(longitude-151,2)+power(latitude+28,2))) from sightings);

/*TASK 4B*/


/*TASK 4C
INDEX SHORTEN THE RUNNING TIME
*/

/*TASK 5A*/

EXPLAIN PLAN FOR
SELECT S.SIGHTING_ID,SP.SPOTTER_NAME,S.SIGHTING_DATE FROM SIGHTINGS S,SPOTTERS SP WHERE SP.SPOTTER_ID=1255;

SELECT PLAN_TABLE_OUTPUT FROM TABLE (DBMS_XPLAN.DISPLAY);
/*TIME USED 00:00:00.57*/


/*TASK 5B*/
ALTER TABLE SPOTTERS DROP CONSTRAINT PK_SPOTTER_ID;

EXPLAIN PLAN FOR
SELECT S.SIGHTING_ID,SP.SPOTTER_NAME,S.SIGHTING_DATE FROM SIGHTINGS S,SPOTTERS SP WHERE SP.SPOTTER_ID=1255;

SELECT PLAN_TABLE_OUTPUT FROM TABLE (DBMS_XPLAN.DISPLAY);

/*TIME USED 00:00:00.02 THE EXECUTION TIME IS MUCH LESSER*/

ANALYZE INDEX PK_BIRD_ID VALIDATE STRUCTURE;
SELECT * FROM INDEX_STATS;

/* TASK 5C
-HEIGHT OF THE TREE 2
-8 LEAF BLOCKS
-3 BLOCK ACCESS*/